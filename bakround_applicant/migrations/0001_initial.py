# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-07-07 20:51
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
from bakround_applicant.utilities.load_extension import LoadExtension

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lookup', '0001_initial'),
    ]

    operations = [
        LoadExtension(name="fuzzystrmatch"),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('certification_name', models.CharField(blank=True, db_index=True, max_length=10000)),
                ('certification_description', models.CharField(blank=True, max_length=1000000, null=True)),
            ],
            options={
                'db_table': 'certification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmailParseFailures',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_id', models.BigIntegerField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=512, null=True)),
                ('reason', models.CharField(blank=True, max_length=128, null=True)),
                ('application_metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'db_table': 'email_parse_failures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FailedQueueMessage',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('queue_name', models.CharField(db_index=True, max_length=100)),
                ('body', models.CharField(blank=True, max_length=1000)),
            ],
            options={
                'db_table': 'failed_queue_message',
            },
        ),
        migrations.CreateModel(
            name='IndustryJobFamily',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'industry_job_family',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('is_waiting_to_be_scored', models.BooleanField(db_index=True, default=False)),
                ('has_ever_been_scored', models.BooleanField(db_index=True, default=True)),
                ('accuracy', models.IntegerField(blank=True, null=True)),
                ('remap_order', models.IntegerField(blank=True, null=True)),
                ('remap_query', models.TextField(blank=True, null=True)),
                ('last_remap_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'job',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobCertification',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('default_weightage', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'job_certification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobFamily',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('family_name', models.CharField(blank=True, max_length=255, null=True)),
                ('family_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('marketing_site_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'job_family',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobRemapAudit',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'job_remap_audit',
            },
        ),
        migrations.CreateModel(
            name='JobSkill',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('default_weightage', models.IntegerField(blank=True, null=True)),
                ('experience_months', models.IntegerField(default=0, null=True)),
            ],
            options={
                'db_table': 'job_skill',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('sender_email', models.CharField(blank=True, max_length=255, null=True)),
                ('recipient_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=512, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('html_body', models.TextField(blank=True, null=True)),
                ('sent', models.BooleanField(default=False)),
                ('opened', models.BooleanField(default=False)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('follow_up_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'notification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotificationBouncedEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('email', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'notification_bounced_email',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotificationRecipient',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('recipient_email', models.CharField(blank=True, max_length=255, null=True)),
                ('sent', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'notification_recipient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotificationRecipientEvent',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=128)),
                ('sg_event_id', models.CharField(blank=True, max_length=128, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'notification_recipient_event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=16, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('linkedin_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('queued_for_deletion', models.BooleanField(db_index=True, default=False)),
                ('hide_from_search', models.BooleanField(default=False)),
                ('name_verification_completed', models.BooleanField(default=False)),
                ('gh_unique_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bakround_applicant.Job')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='lookup.LookupState')),
            ],
            options={
                'db_table': 'profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileCertification',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('certification_name', models.CharField(max_length=128)),
                ('issued_date', models.DateTimeField(blank=True, null=True)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bakround_applicant.Certification')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
            ],
            options={
                'db_table': 'profile_certification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileDetail',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('profile_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('indeed_parser_used', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
            ],
            options={
                'db_table': 'profile_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileEducation',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('school_name', models.CharField(blank=True, max_length=128, null=True)),
                ('school_type', models.CharField(blank=True, max_length=50, null=True)),
                ('degree_name_other', models.CharField(blank=True, max_length=128, null=True)),
                ('degree_major_other', models.CharField(blank=True, max_length=256, null=True)),
                ('degree_type_sovren', models.CharField(blank=True, max_length=50, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('degree_date', models.DateTimeField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('degree_major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='lookup.LookupDegreeMajor')),
                ('degree_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='lookup.LookupDegreeName')),
                ('degree_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='lookup.LookupDegreeType')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='lookup.LookupState')),
            ],
            options={
                'db_table': 'profile_education',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileExperience',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('position_title', models.CharField(blank=True, max_length=255, null=True)),
                ('position_description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('is_current_position', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='lookup.LookupState')),
            ],
            options={
                'db_table': 'profile_experience',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileExternalData',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('provider', models.CharField(max_length=100)),
                ('output', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('emails', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('phones', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('completed', models.BooleanField(default=False)),
                ('success', models.BooleanField(default=False)),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Notification')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
            ],
            options={
                'db_table': 'profile_external_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileResume',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(blank=True, max_length=512, null=True)),
                ('url', models.CharField(blank=True, max_length=512, null=True)),
                ('sovren_output', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('application_metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('sovren_parsed_text_length', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parser_name', models.CharField(blank=True, max_length=100, null=True)),
                ('parser_output', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('cloned_profile_resume', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.ProfileResume')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
            ],
            options={
                'db_table': 'profile_resume',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileSkill',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('skill_name', models.CharField(max_length=128)),
                ('experience_months', models.IntegerField(blank=True, null=True)),
                ('last_used_date', models.DateTimeField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
            ],
            options={
                'db_table': 'profile_skill',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileViewer',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=255)),
                ('notification_sent', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Profile')),
            ],
            options={
                'db_table': 'profile_viewer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileViewerAction',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action_name', models.CharField(max_length=50)),
                ('profile_viewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.ProfileViewer')),
            ],
            options={
                'db_table': 'profile_viewer_action',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('skill_name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'skill',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='profileskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bakround_applicant.Skill'),
        ),
    ]
