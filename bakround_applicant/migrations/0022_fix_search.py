# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-10 15:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations
from bakround_applicant.utilities.migrations import insert_migration_data

SEARCH_PROFILE_VIEW = """
DROP MATERIALIZED VIEW IF EXISTS search_profile_view;

CREATE OR REPLACE FUNCTION get_profile_experience_months(r profile_experience)
                           RETURNS float
AS $$
BEGIN
  RETURN
    (CASE WHEN r.start_date IS NOT NULL AND (r.end_date IS NOT NULL OR r.is_current_position)
          THEN EXTRACT(DAYS FROM (COALESCE(r.end_date, now()) - r.start_date)) / 30.0
          ELSE 0.0
          END);
END
$$ LANGUAGE plpgsql;

-- Contains recent scores
CREATE MATERIALIZED VIEW recent_scores_view
AS SELECT DISTINCT ON (job_id, profile_id)
     profile_id,
     score_value,
     job_id as scored_job_id
   FROM score
   ORDER BY job_id, profile_id, date_created DESC;

-- Contains auxiliary non-score information
CREATE MATERIALIZED VIEW profile_info_view
AS
  SELECT DISTINCT ON (profile.id)
         profile.id as profile_id,
         (SELECT sum(get_profile_experience_months(pe.*))
          FROM profile_experience pe
          WHERE pe.id=profile.id) AS total_experience_months,
         lookup_physical_location.latitude,
         lookup_physical_location.longitude
  FROM profile
     LEFT JOIN lookup_physical_location ON profile.city::text = lookup_physical_location.city::text AND
               profile.state_id = lookup_physical_location.state_id
     WHERE profile.city IS NOT NULL AND profile.state_id IS NOT NULL;

CREATE VIEW search_profile_view4
AS
SELECT 
      recent_score.scored_job_id,
      recent_score.score_value,
      profile.id,
      profile.first_name,
      profile.last_name,
      profile.city,
      profile.state_id,
      profile.last_updated_date,
      profile_info.total_experience_months,
      profile_info.latitude,
      profile_info.longitude
FROM recent_scores_view recent_score
LEFT JOIN profile ON profile.id=recent_score.profile_id
LEFT JOIN profile_info_view as profile_info ON profile_info.profile_id=profile.id;

CREATE UNIQUE INDEX profile_info_view__unique_index ON profile_info_view (profile_id);
CREATE INDEX profile_info_view__total_experience_months ON profile_info_view (total_experience_months);
CREATE UNIQUE INDEX recent_scores_view__unique_index ON recent_scores_view (scored_job_id, profile_id);
CREATE INDEX recent_scores_view__profile_id ON recent_scores_view (profile_id);
""".strip()

class Migration(migrations.Migration):
    dependencies = [
        ('bakround_applicant', '0021_auto_20181018_1703')
    ]

    operations = [
        migrations.RunSQL(SEARCH_PROFILE_VIEW)
    ]

